{"version":3,"sources":["_components/WebRTCHandler/WebRTCHandler.jsx","_components/VideoList/VideoList.jsx","App/App.jsx","serviceWorker.js","index.js"],"names":["ioUrl","enableTrickle","WebRTCHandler","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","getMedia","callback","err","options","video","audio","navigator","mediaDevices","getUserMedia","then","stream","catch","e","onMedia","_this$props","setStream","destroyPeer","socket","io","on","msg","peerId","console","log","id","createPeer","data","from","_this$props2","peers","signalPeer","signal","initiator","peer","Peer","trickle","msgId","Date","getTime","to","emit","setPeerState","connected","send","serialize","unserialize","JSON","stringify","parse","toString","Component","VideoList","renderPeers","size","peerCount","keys","length","entries","map","entry","_entry","slicedToArray","react_default","a","createElement","index_es","item","xs","key","ref","localStream","srcObject","_this2","container","controls","App","attachPeerVideos","state","forEach","setAttribute","play","objectSpread","setState","forceUpdate","_this$state","classes","Fragment","className","root","VideoList_VideoList","WebRTCHandler_WebRTCHandler","styledApp","withStyles","maxWidth","margin","display","alignItems","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d494902a.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport io from \"socket.io-client\";\r\nimport Peer from \"simple-peer\";\r\n\r\n\r\nconst ioUrl = 'http://localhost:3000/';\r\nconst enableTrickle = true;\r\n\r\nclass WebRTCHandler extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.getMedia(this.onMedia, err => console.log(err));\r\n  }\r\n\r\n  getMedia = (callback, err) => {\r\n    const options = { \r\n      video: true, \r\n      audio: true, \r\n    };\r\n\r\n    if (navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {\r\n      return navigator.mediaDevices.getUserMedia(options)\r\n        .then(stream => callback(stream))\r\n        .catch(e => err(e));\r\n    }\r\n    return navigator.getUserMedia(options, callback,  err);\r\n  }\r\n\r\n  onMedia = (stream) => {\r\n    const { setStream, destroyPeer } = this.props;\r\n    setStream(stream);\r\n    this.stream = stream;\r\n\r\n    this.socket = io(ioUrl);\r\n\r\n    this.socket.on('peer', msg => {\r\n      const peerId = msg.peerId;\r\n      console.log('new peer poof!', peerId);\r\n      \r\n      if (peerId === this.socket.id) {\r\n        return console.log('Peer is me :D', peerId);\r\n      }\r\n      \r\n      this.createPeer(peerId, true, stream);\r\n    });\r\n\r\n    this.socket.on('signal', data => {\r\n      const peerId = data.from;\r\n      const { peers, signalPeer } = this.props;\r\n      const peer = peers[peerId];\r\n\r\n      if (!peer) {\r\n        this.createPeer(peerId, false, stream);\r\n      }\r\n      console.log('Setting signal', peerId, data);\r\n\r\n      signalPeer(peerId, data.signal);\r\n    });\r\n\r\n    this.socket.on('unpeer', msg => {\r\n      console.log('Unpeer', msg);\r\n      destroyPeer(msg.peerId);\r\n    });\r\n  }\r\n\r\n  createPeer = (peerId, initiator, stream) => {\r\n\r\n    const peer = new Peer({initiator: initiator, trickle: enableTrickle, stream});\r\n\r\n    peer.on('signal', (signal) => {\r\n      const msgId = (new Date().getTime());\r\n      const msg = { msgId, signal, to: peerId };\r\n      \r\n      console.log('Peer signal:', msg);\r\n      this.socket.emit('signal', msg);\r\n    })\r\n\r\n    peer.on('stream', (stream) => {\r\n      const { setPeerState } = this.props;\r\n      console.log('Got peer stream!!!', peerId, stream)\r\n      peer.stream = stream;\r\n      setPeerState(peerId, peer);\r\n    });\r\n\r\n    peer.on('connect', () => {\r\n      console.log('Connected to peer', peerId);\r\n      peer.connected = true;\r\n\r\n      const { setPeerState } = this.props;\r\n      setPeerState(peerId, peer)\r\n      peer.send(this.serialize({\r\n        msg: 'hey man!'\r\n      }))\r\n    })\r\n\r\n    peer.on('data', data => {\r\n      console.log('Data from peer', peerId, this.unserialize(data))\r\n    })\r\n\r\n    peer.on('error', (e) => {\r\n      console.log('Peer error %s:', peerId, e);\r\n    })\r\n\r\n    const { setPeerState } = this.props;\r\n    setPeerState(peerId, peer)\r\n\r\n    return peer;\r\n  }\r\n\r\n  serialize = data => {\r\n    return JSON.stringify(data)\r\n  }\r\n\r\n  unserialize = data => {\r\n    try {\r\n      return JSON.parse(data.toString())\r\n    } catch(e) {\r\n      return undefined\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return null;\r\n  }\r\n}\r\n\r\nexport { WebRTCHandler };","import React, { Component } from 'react';\r\nimport { Paper, Grid } from '@material-ui/core';\r\nimport { withStyles } from '@material-ui/styles';\r\n\r\nclass VideoList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        const { localStream } = this.props;\r\n        if (localStream && this.video && !this.video.srcObject) {\r\n            this.video.srcObject = localStream;\r\n        }\r\n    }\r\n\r\n    renderPeers = () => {\r\n        const { peers } = this.props;\r\n        const peerCount = Object.keys(peers).length;\r\n        let size;\r\n        \r\n        if (12 / peerCount < 4) {\r\n            size = 4;\r\n        } else {\r\n            size = 12 / peerCount;\r\n        }\r\n        console.log('Size:', size);\r\n\r\n        return Object.entries(peers).map(entry => {\r\n          console.log(entry);\r\n          const [peerId, peer] = entry\r\n          console.log('render peer', peerId, peer, entry)\r\n          console.log('Peer', peer);\r\n          return <Grid item xs={size} key={peerId}>\r\n            <video ref={video => peer.video = video}></video>\r\n          </Grid>\r\n        })\r\n      }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <Paper>\r\n                <Grid container>\r\n                    <Grid item xs={12}>\r\n                        <video id=\"localStream\" ref={video => this.video = video} controls></video>\r\n                    </Grid>\r\n                    {this.renderPeers()}\r\n                </Grid>\r\n            </Paper>\r\n        );\r\n    }\r\n}\r\n\r\nexport { VideoList };","import React, { Component } from 'react';\r\nimport { WebRTCHandler } from '../_components/WebRTCHandler/WebRTCHandler';\r\nimport { Grid, AppBar, Toolbar, Typography } from '@material-ui/core';\r\nimport { VideoList } from '../_components/VideoList';\r\nimport { withStyles } from '@material-ui/styles';\r\n\r\nconst styles = {\r\n  root: {\r\n    maxWidth: '1500px !important',\r\n    margin: '20px 0 20px 0 !important', \r\n    display: 'flex',\r\n    alignItems: 'center',\r\n  },\r\n};\r\n\r\nclass App extends Component {\r\n\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      peers: {},\r\n      localStream: null,\r\n    }\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    this.attachPeerVideos()\r\n  }\r\n\r\n  attachPeerVideos = () => {\r\n    const { peers } = this.state;\r\n    Object.entries(peers).forEach(entry => {\r\n      const [peerId, peer] = entry\r\n      if (peer.video && !peer.video.srcObject && peer.stream) {\r\n        console.log('setting peer video stream', peerId, peer.stream)\r\n        peer.video.setAttribute('data-peer-id', peerId)\r\n        peer.video.srcObject = peer.stream\r\n        peer.video.play();\r\n      }\r\n    })\r\n  }\r\n\r\n  signalPeer = (peerId, data) => {\r\n    try {\r\n      const { peers } = this.state;\r\n      const peer = peers[peerId];\r\n\r\n      console.log('Signal peer', peer);\r\n      peer.signal(data)\r\n    } catch (e) {\r\n      console.log('sigal error', e)\r\n    }\r\n  }\r\n\r\n  destroyPeer = peerId => {\r\n    const peers = { ...this.state.peers }\r\n    delete peers[peerId]\r\n    this.setState({\r\n      peers\r\n    })\r\n  }\r\n\r\n  setPeerState = (peerId, peer) => {\r\n    console.log('SetPeerState');\r\n    console.log(peerId, peer);\r\n    const peers = { ...this.state.peers }\r\n    peers[peerId] = peer\r\n    this.setState({\r\n      peers\r\n    })\r\n  }\r\n\r\n  setStream = stream => {\r\n    this.setState({ localStream: stream });\r\n    this.forceUpdate();\r\n  }\r\n\r\n  render() {\r\n    const { peers, localStream } = this.state;\r\n    const { classes } = this.props;\r\n    return (\r\n      <>\r\n        <Grid container>\r\n          <Grid item xs={12}>\r\n            <AppBar>\r\n              <Toolbar>\r\n                <Typography>\r\n                  Video conference\r\n                </Typography>\r\n              </Toolbar>\r\n            </AppBar>\r\n          </Grid>\r\n          <Grid item xs={12} className={classes.root}>\r\n            <VideoList \r\n              peers={peers}\r\n              localStream={localStream} \r\n            />\r\n          </Grid>\r\n        </Grid>\r\n        <WebRTCHandler\r\n          setPeerState={this.setPeerState}\r\n          setStream={this.setStream}\r\n          destroyPeer={this.destroyPeer}\r\n          signalPeer={this.signalPeer}\r\n          peers={peers}\r\n        />\r\n      </>\r\n    );\r\n  }\r\n}\r\nconst styledApp = withStyles(styles)(App);\r\nexport { styledApp as App };","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from \"./App\";\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}